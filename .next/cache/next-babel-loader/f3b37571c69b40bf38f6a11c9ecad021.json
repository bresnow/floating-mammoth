{"ast":null,"code":"\"use strict\";exports.__esModule=true;exports.default=initHeadManager;var DOMAttributeNames={acceptCharset:'accept-charset',className:'class',htmlFor:'for',httpEquiv:'http-equiv'};function reactElementToDOM(_ref){var type=_ref.type,props=_ref.props;var el=document.createElement(type);for(var p in props){if(!props.hasOwnProperty(p))continue;if(p==='children'||p==='dangerouslySetInnerHTML')continue;if(props[p]===undefined)continue;var attr=DOMAttributeNames[p]||p.toLowerCase();el.setAttribute(attr,props[p]);}var children=props.children,dangerouslySetInnerHTML=props.dangerouslySetInnerHTML;if(dangerouslySetInnerHTML){el.innerHTML=dangerouslySetInnerHTML.__html||'';}else if(children){el.textContent=typeof children==='string'?children:Array.isArray(children)?children.join(''):'';}return el;}function updateElements(type,components){var headEl=document.getElementsByTagName('head')[0];var headCountEl=headEl.querySelector('meta[name=next-head-count]');if(true){if(!headCountEl){console.error('Warning: next-head-count is missing. https://err.sh/next.js/next-head-count-missing');return;}}var headCount=Number(headCountEl.content);var oldTags=[];for(var i=0,j=headCountEl.previousElementSibling;i<headCount;i++,j=j.previousElementSibling){if(j.tagName.toLowerCase()===type){oldTags.push(j);}}var newTags=components.map(reactElementToDOM).filter(function(newTag){for(var k=0,len=oldTags.length;k<len;k++){var oldTag=oldTags[k];if(oldTag.isEqualNode(newTag)){oldTags.splice(k,1);return false;}}return true;});oldTags.forEach(function(t){return t.parentNode.removeChild(t);});newTags.forEach(function(t){return headEl.insertBefore(t,headCountEl);});headCountEl.content=(headCount-oldTags.length+newTags.length).toString();}function initHeadManager(){var updatePromise=null;return{mountedInstances:new Set(),updateHead:function updateHead(head){var promise=updatePromise=Promise.resolve().then(function(){if(promise!==updatePromise)return;updatePromise=null;var tags={};head.forEach(function(h){var components=tags[h.type]||[];components.push(h);tags[h.type]=components;});var titleComponent=tags.title?tags.title[0]:null;var title='';if(titleComponent){var children=titleComponent.props.children;title=typeof children==='string'?children:Array.isArray(children)?children.join(''):'';}if(title!==document.title)document.title=title;['meta','base','link','style','script'].forEach(function(type){updateElements(type,tags[type]||[]);});});}};}","map":{"version":3,"sources":["../../client/head-manager.ts"],"names":["DOMAttributeNames","acceptCharset","className","htmlFor","httpEquiv","el","document","props","p","attr","dangerouslySetInnerHTML","Array","children","headEl","headCountEl","console","headCount","Number","oldTags","i","j","newTags","components","newTag","k","len","oldTag","t","updatePromise","mountedInstances","updateHead","head","promise","Promise","tags","h","titleComponent","title","type","updateElements"],"mappings":"qEAAA,GAAMA,CAAAA,iBAAyC,CAAG,CAChDC,aAAa,CADmC,gBAAA,CAEhDC,SAAS,CAFuC,OAAA,CAGhDC,OAAO,CAHyC,KAAA,CAIhDC,SAAS,CAJX,YAAkD,CAAlD,CAOA,QAAA,CAAA,iBAAA,MAAsE,IAA3C,CAAA,IAA2C,MAA3C,IAA2C,CAAtE,KAAsE,MAAtE,KAAsE,CACpE,GAAMC,CAAAA,EAAE,CAAGC,QAAQ,CAARA,aAAAA,CAAX,IAAWA,CAAX,CACA,IAAK,GAAL,CAAA,CAAA,GAAA,CAAA,KAAA,CAAuB,CACrB,GAAI,CAACC,KAAK,CAALA,cAAAA,CAAL,CAAKA,CAAL,CAA8B,SAC9B,GAAIC,CAAC,GAADA,UAAAA,EAAoBA,CAAC,GAAzB,yBAAA,CAAyD,SAGzD,GAAID,KAAK,CAALA,CAAK,CAALA,GAAJ,SAAA,CAA4B,SAE5B,GAAME,CAAAA,IAAI,CAAGT,iBAAiB,CAAjBA,CAAiB,CAAjBA,EAAwBQ,CAAC,CAAtC,WAAqCA,EAArC,CACAH,EAAE,CAAFA,YAAAA,CAAAA,IAAAA,CAAsBE,KAAK,CAA3BF,CAA2B,CAA3BA,EAGF,CAboE,GAa9D,CAAA,QAb8D,CAapE,KAboE,CAa9D,QAb8D,CAa9D,uBAb8D,CAapE,KAboE,CAa9D,uBAb8D,CAcpE,GAAA,uBAAA,CAA6B,CAC3BA,EAAE,CAAFA,SAAAA,CAAeK,uBAAuB,CAAvBA,MAAAA,EAAfL,EAAAA,CADF,CAAA,IAEO,IAAA,QAAA,CAAc,CACnBA,EAAE,CAAFA,WAAAA,CACE,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,QAAA,CAEIM,KAAK,CAALA,OAAAA,CAAAA,QAAAA,EACAC,QAAQ,CAARA,IAAAA,CADAD,EACAC,CADAD,CAHNN,EAAAA,CAOF,OAAA,CAAA,EAAA,CAGF,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,UAAA,CAAiE,CAC/D,GAAMQ,CAAAA,MAAM,CAAGP,QAAQ,CAARA,oBAAAA,CAAAA,MAAAA,EAAf,CAAeA,CAAf,CACA,GAAMQ,CAAAA,WAA4B,CAAGD,MAAM,CAANA,aAAAA,CAArC,4BAAqCA,CAArC,CAGA,QAA2C,CACzC,GAAI,CAAJ,WAAA,CAAkB,CAChBE,OAAO,CAAPA,KAAAA,CAAAA,qFAAAA,EAGA,OAEH,CAED,IAAMC,CAAAA,SAAS,CAAGC,MAAM,CAACH,WAAW,CAApC,OAAwB,CAAxB,CACA,GAAMI,CAAAA,OAAkB,CAAxB,EAAA,CAEA,IACE,GAAIC,CAAAA,CAAC,CAAL,CAAA,CAAWC,CAAC,CAAGN,WAAW,CAD5B,sBAAA,CAEEK,CAAC,CAFH,SAAA,CAGEA,CAAC,GAAIC,CAAC,CAAGA,CAAC,CAHZ,sBAAA,CAIE,CACA,GAAIA,CAAC,CAADA,OAAAA,CAAAA,WAAAA,KAAJ,IAAA,CAAuC,CACrCF,OAAO,CAAPA,IAAAA,CAAAA,CAAAA,EAEH,CACD,IAAMG,CAAAA,OAAO,CAAIC,UAAU,CAAVA,GAAAA,CAAD,iBAACA,EAAD,MAACA,CACdC,SAAAA,MAAD,CAAY,CACV,IAAK,GAAIC,CAAAA,CAAC,CAAL,CAAA,CAAWC,GAAG,CAAGP,OAAO,CAA7B,MAAA,CAAsCM,CAAC,CAAvC,GAAA,CAA+CA,CAA/C,EAAA,CAAoD,CAClD,GAAME,CAAAA,MAAM,CAAGR,OAAO,CAAtB,CAAsB,CAAtB,CACA,GAAIQ,MAAM,CAANA,WAAAA,CAAJ,MAAIA,CAAJ,CAAgC,CAC9BR,OAAO,CAAPA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EACA,MAAA,MAAA,CAEH,CACD,OAAA,KAAA,CATJ,CAAiBI,CAAjB,CAaAJ,OAAO,CAAPA,OAAAA,CAAiBS,SAAAA,CAAD,QAAOA,CAAAA,CAAC,CAADA,UAAAA,CAAAA,WAAAA,CAAvBT,CAAuBS,CAAP,EAAhBT,EACAG,OAAO,CAAPA,OAAAA,CAAiBM,SAAAA,CAAD,QAAOd,CAAAA,MAAM,CAANA,YAAAA,CAAAA,CAAAA,CAAvBQ,WAAuBR,CAAP,EAAhBQ,EACAP,WAAW,CAAXA,OAAAA,CAAsB,CAACE,SAAS,CAAGE,OAAO,CAAnBF,MAAAA,CAA6BK,OAAO,CAArC,MAAA,EAAtBP,QAAsB,EAAtBA,CAGa,SAAA,CAAA,eAAA,EAA2B,CACxC,GAAIc,CAAAA,aAAmC,CAAvC,IAAA,CAEA,MAAO,CACLC,gBAAgB,CAAE,GADb,CAAA,GACa,EADb,CAELC,UAAU,CAAGC,oBAAAA,IAAD,CAAyB,CACnC,GAAMC,CAAAA,OAAO,CAAIJ,aAAa,CAAGK,OAAO,CAAPA,OAAAA,GAAAA,IAAAA,CAAuB,UAAM,CAC5D,GAAID,OAAO,GAAX,aAAA,CAA+B,OAE/BJ,aAAa,CAAbA,IAAAA,CACA,GAAMM,CAAAA,IAAmC,CAAzC,EAAA,CAEAH,IAAI,CAAJA,OAAAA,CAAcI,SAAAA,CAAD,CAAO,CAClB,GAAMb,CAAAA,UAAU,CAAGY,IAAI,CAACC,CAAC,CAAND,IAAI,CAAJA,EAAnB,EAAA,CACAZ,UAAU,CAAVA,IAAAA,CAAAA,CAAAA,EACAY,IAAI,CAACC,CAAC,CAAND,IAAI,CAAJA,CAAAA,UAAAA,CAHFH,CAAAA,EAMA,GAAMK,CAAAA,cAAc,CAAGF,IAAI,CAAJA,KAAAA,CAAaA,IAAI,CAAJA,KAAAA,CAAbA,CAAaA,CAAbA,CAAvB,IAAA,CACA,GAAIG,CAAAA,KAAK,CAAT,EAAA,CACA,GAAA,cAAA,CAAoB,IACZ,CAAA,QADY,CACGD,cAAc,CAAnC,KADkB,CACZ,QADY,CAElBC,KAAK,CACH,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,QAAA,CAEI1B,KAAK,CAALA,OAAAA,CAAAA,QAAAA,EACAC,QAAQ,CAARA,IAAAA,CADAD,EACAC,CADAD,CAHN0B,EAAAA,CAOF,IAAIA,KAAK,GAAK/B,QAAQ,CAAtB,KAAA,CAA8BA,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,CAC7B,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,QAAA,EAAA,OAAA,CAAqDgC,SAAAA,IAAD,CAAU,CAC7DC,cAAc,CAAA,IAAA,CAAOL,IAAI,CAAJA,IAAI,CAAJA,EAArBK,EAAc,CAAdA,CADD,CAAA,EAxBH,CAAiCN,CAAjC,CAHJ,CAAO,CAAP,CAiCD","sourcesContent":["const DOMAttributeNames: Record<string, string> = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n}\n\nfunction reactElementToDOM({ type, props }: JSX.Element): HTMLElement {\n  const el = document.createElement(type)\n  for (const p in props) {\n    if (!props.hasOwnProperty(p)) continue\n    if (p === 'children' || p === 'dangerouslySetInnerHTML') continue\n\n    // we don't render undefined props to the DOM\n    if (props[p] === undefined) continue\n\n    const attr = DOMAttributeNames[p] || p.toLowerCase()\n    el.setAttribute(attr, props[p])\n  }\n\n  const { children, dangerouslySetInnerHTML } = props\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || ''\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n        ? children.join('')\n        : ''\n  }\n  return el\n}\n\nfunction updateElements(type: string, components: JSX.Element[]) {\n  const headEl = document.getElementsByTagName('head')[0]\n  const headCountEl: HTMLMetaElement = headEl.querySelector(\n    'meta[name=next-head-count]'\n  ) as HTMLMetaElement\n  if (process.env.NODE_ENV !== 'production') {\n    if (!headCountEl) {\n      console.error(\n        'Warning: next-head-count is missing. https://err.sh/next.js/next-head-count-missing'\n      )\n      return\n    }\n  }\n\n  const headCount = Number(headCountEl.content)\n  const oldTags: Element[] = []\n\n  for (\n    let i = 0, j = headCountEl.previousElementSibling;\n    i < headCount;\n    i++, j = j!.previousElementSibling\n  ) {\n    if (j!.tagName.toLowerCase() === type) {\n      oldTags.push(j!)\n    }\n  }\n  const newTags = (components.map(reactElementToDOM) as HTMLElement[]).filter(\n    (newTag) => {\n      for (let k = 0, len = oldTags.length; k < len; k++) {\n        const oldTag = oldTags[k]\n        if (oldTag.isEqualNode(newTag)) {\n          oldTags.splice(k, 1)\n          return false\n        }\n      }\n      return true\n    }\n  )\n\n  oldTags.forEach((t) => t.parentNode!.removeChild(t))\n  newTags.forEach((t) => headEl.insertBefore(t, headCountEl))\n  headCountEl.content = (headCount - oldTags.length + newTags.length).toString()\n}\n\nexport default function initHeadManager() {\n  let updatePromise: Promise<void> | null = null\n\n  return {\n    mountedInstances: new Set(),\n    updateHead: (head: JSX.Element[]) => {\n      const promise = (updatePromise = Promise.resolve().then(() => {\n        if (promise !== updatePromise) return\n\n        updatePromise = null\n        const tags: Record<string, JSX.Element[]> = {}\n\n        head.forEach((h) => {\n          const components = tags[h.type] || []\n          components.push(h)\n          tags[h.type] = components\n        })\n\n        const titleComponent = tags.title ? tags.title[0] : null\n        let title = ''\n        if (titleComponent) {\n          const { children } = titleComponent.props\n          title =\n            typeof children === 'string'\n              ? children\n              : Array.isArray(children)\n              ? children.join('')\n              : ''\n        }\n        if (title !== document.title) document.title = title\n        ;['meta', 'base', 'link', 'style', 'script'].forEach((type) => {\n          updateElements(type, tags[type] || [])\n        })\n      }))\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"script"}